<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Full Project Implementation</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>Full Project Implementation</h1>

        <div class="project-section portfolio-section">
            <h2>Personal Portfolio Website</h2>
            <p>Design and build a professional, multi-page portfolio website to showcase skills and projects.</p>
        </div>

        <div class="project-section todo-app">
            <h2>To-Do App with Local Storage</h2>
            <input type="text" id="noteInput" placeholder="Add a new note...">
            <button id="addNoteBtn">Add Note</button>
            <ul id="noteList"></ul>
        </div>

        <div class="project-section product-listing">
            <h2>Product Listing Page</h2>
            <div class="controls">
                <label for="filterCategory">Filter by Category:</label>
                <select id="filterCategory">
                    <option value="all">All</option>
                    <option value="electronics">Electronics</option>
                    <option value="books">Books</option>
                </select>
            </div>
            <div id="productList"></div>
        </div>
    </div>
    
    <script src="script.js"></script>
</body>
</html>
body {
    font-family: 'Arial', sans-serif;
    background-color: #fafafa;
    color: #444;
    margin: 0;
    padding: 20px;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    background-color: #fff;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    color: #2c3e50;
    margin-bottom: 50px;
}

.project-section {
    margin-bottom: 40px;
    padding: 25px;
    background-color: #f8f9fa;
    border-left: 5px solid #3498db;
    border-radius: 5px;
}

h2 {
    color: #2c3e50;
}

/* To-Do App Styling */
.todo-app input, .todo-app button {
    padding: 10px;
    margin-top: 10px;
}

.todo-app button {
    background-color: #2ecc71;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.todo-app ul {
    list-style-type: none;
    padding: 0;
}

.todo-app li {
    background-color: #fff;
    padding: 10px;
    margin-top: 10px;
    border-radius: 5px;
    border: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.todo-app .delete-btn {
    background: none;
    border: none;
    color: #e74c3c;
    cursor: pointer;
}

/* Product Listing Styling */
.product-listing .controls {
    margin-bottom: 20px;
}

#productList {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
}

.product-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    text-align: center;
    padding: 15px;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

.product-card h3 {
    margin: 10px 0;
}

.product-card p {
    color: #777;
    font-size: 0.9em;
}

.product-card .price {
    font-weight: bold;
    color: #2c3e50;
}
// Task 4.2: To-Do/Note-Taking App with Local Storage
const noteInput = document.getElementById('noteInput');
const addNoteBtn = document.getElementById('addNoteBtn');
const noteList = document.getElementById('noteList');

function saveNotes() {
    const notes = [];
    document.querySelectorAll('#noteList li').forEach(li => {
        notes.push(li.textContent.replace('x', '').trim());
    });
    localStorage.setItem('notes', JSON.stringify(notes));
}

function loadNotes() {
    const notes = JSON.parse(localStorage.getItem('notes')) || [];
    notes.forEach(note => createNoteElement(note));
}

function createNoteElement(text) {
    const li = document.createElement('li');
    li.textContent = text;
    
    const deleteBtn = document.createElement('button');
    deleteBtn.textContent = 'x';
    deleteBtn.classList.add('delete-btn');
    deleteBtn.addEventListener('click', function() {
        noteList.removeChild(li);
        saveNotes();
    });

    li.appendChild(deleteBtn);
    noteList.appendChild(li);
}

addNoteBtn.addEventListener('click', function() {
    const text = noteInput.value.trim();
    if (text !== '') {
        createNoteElement(text);
        saveNotes();
        noteInput.value = '';
    }
});

document.addEventListener('DOMContentLoaded', loadNotes);

// Task 4.3: Product Listing with Filtering/Sorting
const products = [
    { id: 1, name: 'Laptop', category: 'electronics', price: 1200 },
    { id: 2, name: 'Book', category: 'books', price: 25 },
    { id: 3, name: 'Smartphone', category: 'electronics', price: 800 },
    { id: 4, name: 'Novel', category: 'books', price: 15 },
    { id: 5, name: 'Headphones', category: 'electronics', price: 150 }
];

const productList = document.getElementById('productList');
const filterCategory = document.getElementById('filterCategory');

function renderProducts(filteredProducts) {
    productList.innerHTML = '';
    filteredProducts.forEach(product => {
        const productCard = document.createElement('div');
        productCard.classList.add('product-card');
        productCard.innerHTML = `
            <h3>${product.name}</h3>
            <p>Category: ${product.category}</p>
            <p class="price">$${product.price}</p>
        `;
        productList.appendChild(productCard);
    });
}

filterCategory.addEventListener('change', function() {
    const category = this.value;
    const filtered = products.filter(product => category === 'all' || product.category === category);
    renderProducts(filtered);
});

// Initial render
renderProducts(products);
